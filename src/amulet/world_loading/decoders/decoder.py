from __future__ import annotations

from typing import Tuple

from ...api.chunk import Chunk


class Decoder:
    def decode(self, data) -> Chunk:
        """
        Create an amulet.api.chunk.Chunk object from raw data given by the format.

        :param data: Raw chunk data provided by the format.
        :return: Chunk object that matches the data.
        """
        raise NotImplementedError()

    @staticmethod
    def identify(key: Tuple) -> bool:
        """
        Returns whether this decoder is able to decode the chunk type with a given identifier key,
        generated by the format.

        :param key: The key who's decodability needs to be checked.
        :return: True if this decoder can decode the chunk version associated with the key, False otherwise.
        """
        raise NotImplementedError()
